<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="INFO">

    <Properties>
        <Property name="logFileName">springStudy</Property>
        <Property name="consoleLayout">%style{%d{ISO8601}}{white} %highlight{%-5level }[%style{%t}{bright,blue}] %style{%C{1.}}{bright,yellow}: %msg%n%throwable</Property>
        <Property name="fileLayout">%d [%t] %-5level %c(%M:%L) - %m%n</Property>
    </Properties>

    <Appenders>
        <Console name="console" target="SYSTEM_OUT">
            <PatternLayout pattern="${consoleLayout}" />
        </Console>
        <RollingFile name="file" fileName="logs/${logFileName}.log" filePattern="logs/${logFileName}.%d{yyyy-MM-dd-hh}.log">
            <PatternLayout pattern="${fileLayout}" />
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1" /><!-- 시간별 로그 파일 생성-->
            </Policies>
            <DefaultRolloverStrategy max="5" fileIndex="min" /><!-- 롤링 파일 5개 까지 생성 -->
        </RollingFile>
    </Appenders>

    <Loggers>

        <!-- 스프링 프레임워크에서 찍는건 level을 info로 설정 -->
        <logger name="org.springframework" level="info" additivity="false" >
            <AppenderRef ref="console" />
            <AppenderRef ref="file" />
        </logger>

        <!-- rolling file에는 debug, console에는 info 분리하여 처리 가능하다. -->

        <logger name="java.sql" level="off" additivity="false">
            <AppenderRef ref="console" />
            <AppenderRef ref="file" />
        </logger>
        <!-- Query Loggers 쿼리(파라미터까지) -->
        <logger name="jdbc.sqlonly" level="off" additivity="false">
            <AppenderRef ref="console" />
            <AppenderRef ref="file" />
        </logger>
        <!--  SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. 필요시 open -->
        <logger name="jdbc.sqltiming" level="debug" additivity="false">
            <AppenderRef ref="console" />
            <AppenderRef ref="file" />
        </logger>
        <!--  SQL 결과 조회된 데이터의 table을 로그로 남긴다.(빼도됨) -->
        <logger name="jdbc.resultsettable" level="off" additivity="false">
            <AppenderRef ref="console" />
            <AppenderRef ref="file" />
        </logger>
        <!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다.-->
        <logger name="jdbc.audit" level="off" additivity="false">
            <AppenderRef ref="console" />
            <AppenderRef ref="file" />
        </logger>
        <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
        <logger name="jdbc.resultset" level="off" additivity="false">
            <AppenderRef ref="console" />
            <AppenderRef ref="file" />
        </logger>
        <logger name="jdbc.connection" level="off" additivity="false">
            <AppenderRef ref="console" />
            <AppenderRef ref="file" />
        </logger>
        <Root level="info">
            <AppenderRef ref="console" />
            <AppenderRef ref="file" />
        </Root>

    </Loggers>
</Configuration>